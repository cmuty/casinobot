import random
from typing import Optional, Dict, Any
from enum import Enum
from src.models import User # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å User –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏

class PersonalityType(str, Enum):
    PLAYFUL = "playful"
    NEUTRAL = "neutral"
    FORMAL = "formal"
    FREAK = "freak"

class PersonalityEngine:
    """–î–≤–∏–∂–æ–∫ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
    
    PERSONALITIES = {
        PersonalityType.PLAYFUL: lambda: PlayfulPersonality(),
        PersonalityType.NEUTRAL: lambda: NeutralPersonality(),
        PersonalityType.FORMAL: lambda: FormalPersonality(),
        PersonalityType.FREAK: lambda: FreakPersonality(),
    }
    
    @staticmethod
    async def get_message(
        event: str,
        user: User, # –ü–µ—Ä–µ–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context: Optional[Dict[str, Any]] = None
    ) -> str:
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á—ë—Ç–æ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            event: –¢–∏–ø —Å–æ–±—ã—Ç–∏—è (win, loss, jackpot, etc.)
            user: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
            context: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (—Å—É–º–º–∞, —Å—Ç—Ä–∏–∫ –∏ —Ç.–¥.)
        """
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, fallback –Ω–∞ PLAYFUL
        personality = getattr(user, 'personality', PersonalityType.PLAYFUL)
        
        print(f"DEBUG PERSONALITY: User {user.telegram_id}, personality from DB: '{personality}', type: {type(personality)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–∏—á–Ω–æ—Å—Ç—å –≤–∞–ª–∏–¥–Ω–∞ (—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ enum)
        valid_personalities = [p.value for p in PersonalityType]
        print(f"DEBUG PERSONALITY: Valid personalities: {valid_personalities}")
        
        if personality not in valid_personalities:
            print(f"DEBUG PERSONALITY: Invalid personality '{personality}', falling back to PLAYFUL")
            personality = PersonalityType.PLAYFUL.value
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ enum
        personality_enum = PersonalityType(personality)
        print(f"DEBUG PERSONALITY: Final personality enum: {personality_enum}")

        personality_func = PersonalityEngine.PERSONALITIES.get(
            personality_enum,
            PersonalityEngine.PERSONALITIES[PersonalityType.PLAYFUL]
        )
        personality_obj = personality_func()
        
        return personality_obj.get_message(event, context or {})

class PlayfulPersonality:
    """–ò–≥—Ä–∏–≤–∞—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å —é–º–æ—Ä–æ–º"""
    
    EMOJIS = {
        'win': ['üéâ', 'ü•≥', 'üéä', 'üí∞', 'ü§ë'],
        'loss': ['üòÖ', 'üòî', 'üôà', 'üíî', 'üò¢'],
        'jackpot': ['üíé', 'üëë', 'üöÄ', '‚≠ê', 'üéÜ']
    }
    
    def get_message(self, event: str, context: Dict[str, Any]) -> str:
        if event == 'big_win':
            multiplier = context.get('multiplier', 2)
            if multiplier >= 50:
                return random.choice([
                    f"ü§Ø –í–ê–£! –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ—Ä–≤–∞–ª x{multiplier}! –≠—Ç–æ –∂–µ –ø–æ—á—Ç–∏ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ –∫–∞–∑–∏–Ω–æ! (–®—É—á—É, –º—ã —Ä–∞–¥—ã –∑–∞ —Ç–µ–±—è! üòÑ)",
                    f"üí• –ë–£–ú! x{multiplier}! –¢–≤–æ—è –∫–∞—Ä–º–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–∞ –≤—ã—Å–æ—Ç–µ! üåü",
                    f"üöÄ –ö–û–°–ú–û–°! x{multiplier}! –õ—É–Ω–∞ —É–∂–µ –Ω–µ –ø—Ä–µ–¥–µ–ª –¥–ª—è —Ç–µ–±—è! üåô"
                ])
            elif multiplier >= 10:
                return random.choice([
                    f"üéâ –û—Ç–ª–∏—á–Ω–æ! x{multiplier}! –£–¥–∞—á–∞ —è–≤–Ω–æ —Ä–µ—à–∏–ª–∞ –ø–æ–¥—Ä—É–∂–∏—Ç—å—Å—è —Å —Ç–æ–±–æ–π! üçÄ",
                    f"üí™ –ö—Ä–∞—Å–∞–≤—á–∏–∫! x{multiplier}! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üî•"
                ])
            else:
                return random.choice([
                    f"üéä –£—Ä–∞! –í—ã–∏–≥—Ä—ã—à x{multiplier}! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ü•≥",
                    f"ü§ë –£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! x{multiplier} ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üí∞"
                ])
        
        elif event == 'slots_loss':
            return random.choice([
                f"üòÖ –≠—Ö, –±–∞—Ä–∞–±–∞–Ω—ã –Ω–µ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ–≥–æ–¥–Ω—è... –ù–æ –∑–Ω–∞–µ—à—å —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç: –Ω–µ –≤–µ–∑—ë—Ç –≤ –∫–∞—Ä—Ç–∞—Ö ‚Äî –ø–æ–≤–µ–∑—ë—Ç –≤ –ª—é–±–≤–∏! üíï",
                f"üòî –ù–µ –ø–æ–≤–µ–∑–ª–æ... –ù–æ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è! –°–ª–µ–¥—É—é—â–∞—è —Å—Ç–∞–≤–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—É–ø–µ—Ä—É–¥–∞—á–Ω–æ–π! üçÄ",
                f"üôà –û–π-–æ–π... –ú–æ–∂–µ—Ç, —Å—Ç–æ–∏—Ç —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤ –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è —Å –Ω–æ–≤—ã–º–∏ —Å–∏–ª–∞–º–∏? üí™"
            ])
        
        elif event == 'dice_win':
            return random.choice([
                f"üé≤ –•–∞! –ë–æ—Ç –≤ —à–æ–∫–µ! –¢—ã –∫–∏–Ω—É–ª –∫—É–±–∏–∫ –∫–∞–∫ –ø—Ä–æ—Ñ–∏! –£–¥–∞—á–∞ —è–≤–Ω–æ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! üçÄ",
                f"üéâ –ü–æ–±–µ–¥–∞! –ë–æ—Ç –ø—Ä–æ–∏–≥—Ä–∞–ª, –∞ —Ç—ã ‚Äî –º–æ–ª–æ–¥–µ—Ü! üôå",
                f"üí™ –ö—Ä—É—Ç–∞–Ω—É–ª –∫—É–±–∏–∫ ‚Äî –∏ –≤ —Ç–æ—á–∫—É! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üî•"
            ])
        
        elif event == 'dice_loss':
            return random.choice([
                f"üé≤ –£–ø—Å... –ë–æ—Ç —Å–µ–≥–æ–¥–Ω—è –≤ —É–¥–∞—Ä–µ! –ù–æ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è ‚Äî —Ä–µ–≤–∞–Ω—à –Ω–µ –∑–∞ –≥–æ—Ä–∞–º–∏! üí™",
                f"üòî –ë–æ—Ç –ø–æ–±–µ–¥–∏–ª... –ù–æ —Ç—ã –Ω–µ –≤–µ—à–∞–π –Ω–æ—Å! –°–ª–µ–¥—É—é—â–∞—è –∏–≥—Ä–∞ ‚Äî —Ç–≤–æ—è! üåü",
                f"üòÖ –ö—É–±–∏–∫ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –Ω–æ —É–¥–∞—á–∞ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç! üé≤"
            ])
        
        elif event == 'jackpot':
            return random.choice([
                f"üíé –°–í–Ø–¢–´–ï –°–õ–û–¢–´! –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ—Ä–≤–∞–ª –î–ñ–ï–ö–ü–û–¢! –¢–≤–æ—è —É–¥–∞—á–∞ –∑–∞—à–∫–∞–ª–∏–≤–∞–µ—Ç! üöÄ –ú–æ–∂–µ—Ç, —Å—Ç–æ–∏—Ç –∑–∞—Å—Ç—Ä–∞—Ö–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç? üòé",
                f"üéÜ –í–ê–£! –î–ñ–ï–ö–ü–û–¢! –≠—Ç–æ –±—É–¥–µ—Ç –Ω–∞ –æ–±–ª–æ–∂–∫–µ –∫–∞–∑–∏–Ω–æ! üì∏",
                f"üëë –õ–ï–ì–ï–ù–î–ê! –¢—ã —Å–æ—Ä–≤–∞–ª –¥–∂–µ–∫–ø–æ—Ç! –ò—Å—Ç–æ—Ä–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è! üöÄ"
            ])
        
        elif event == 'low_balance':
            return random.choice([
                f"üí∏ –û–π-–æ–π, –∫–æ—à–µ–ª—ë–∫ –ø–æ—Ö—É–¥–µ–ª! –ú–æ–∂–µ—Ç, –ø–æ—Ä–∞ –ø–æ–¥–∫—Ä–µ–ø–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ /buy? –ò–ª–∏ –ø–æ–ø—Ä–æ–±—É–π –ø–æ–π–º–∞—Ç—å —É–¥–∞—á—É –∑–∞ —Ö–≤–æ—Å—Ç —Å —Ç–µ–º, —á—Ç–æ –µ—Å—Ç—å! üé∞",
                f"üí∞ –ë–∞–ª–∞–Ω—Å –Ω–∞ –Ω—É–ª–µ? –ù–µ –±–µ–¥–∞! –ì–ª–∞–≤–Ω–æ–µ ‚Äî –≤–µ—Ä–∏—Ç—å –≤ —É–¥–∞—á—É! üçÄ",
                f"üòÖ –ö–æ—à–µ–ª—å –ø—É—Å—Ç? –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç–∞–≤–∫–∞ –º–æ–∂–µ—Ç –≤—Å—ë –∏–∑–º–µ–Ω–∏—Ç—å! üí™"
            ])
        
        elif event == 'daily_bonus':
            return random.choice([
                f"üéÅ –¢–≤–æ–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –≥–æ—Ç–æ–≤! –ö–∞–∫ –±—É–¥—Ç–æ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! üéÇ",
                f"üéâ –ë–æ–Ω—É—Å –ø—Ä–∏–±—ã–ª! –£—Ä–∞! –° –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º! ü•≥",
                f"ü§ë –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å ‚Äî —Ç–≤–æ–π –∫–ª—é—á–∏–∫ –∫ —É–¥–∞—á–µ! –ù–µ –∑–∞–±—ã–≤–∞–π –∑–∞–±–∏—Ä–∞—Ç—å! üí∞"
            ])
        
        elif event == 'welcome_back':
            return random.choice([
                f"–ô–æ—É! –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –ë–∞—Ä–∞–±–∞–Ω—ã —É–∂–µ —Å–æ—Å–∫—É—á–∏–ª–∏—Å—å –ø–æ —Ç–µ–±–µ! üé∞",
                f"üëã –ü—Ä–∏–≤–µ—Ç, —á–µ–º–ø–∏–æ–Ω! –ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –ø–æ–±–µ–¥–∞–º? üèÜ",
                f"üéÆ –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –∏–≥—Ä—É! –£–¥–∞—á–∞ –∂–¥—ë—Ç —Ç–µ–±—è! üçÄ"
            ])
        
        elif event == 'error_too_fast':
            return random.choice([
                f"‚è∞ –≠–π, —ç–π, —ç–π! –ü—Ä–∏—Ç–æ—Ä–º–æ–∑–∏, –∫–æ–≤–±–æ–π! –î–∞–∂–µ —É–¥–∞—á–µ –Ω—É–∂–Ω–∞ —Å–µ–∫—É–Ω–¥–æ—á–∫–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥—É—Ö! üòÖ",
                f"üòÖ –ú–µ–¥–ª–µ–Ω–Ω–µ–µ! –£ —Ç–µ–±—è —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä—ã–µ —Ä—É–∫–∏! –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ. ‚è≥",
                f"‚è±Ô∏è –ù–µ —Å–ø–µ—à–∏! –î–∞–π –±–æ—Ç—É –ø–µ—Ä–µ–¥—ã—à–∫—É. –£ —Ç–µ–±—è –≤—Å—ë —Ä–∞–≤–Ω–æ –≤—Å—ë –≤–ø–µ—Ä–µ–¥–∏! üí™"
            ])
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –ù–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º! üîß"

class NeutralPersonality:
    """–ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"""
    
    def get_message(self, event: str, context: Dict[str, Any]) -> str:
        if event == 'big_win':
            multiplier = context.get('multiplier', 2)
            return f"‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –≤—ã–∏–≥—Ä—ã—à–µ–º x{multiplier}! –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω."
        elif event == 'slots_loss':
            return "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É–¥–∞—á–∞ –Ω–µ –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
        elif event == 'dice_win':
            return "üé≤ –ü–æ–±–µ–¥–∞! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—à–µ, —á–µ–º —É –±–æ—Ç–∞."
        elif event == 'dice_loss':
            return "üé≤ –ë–æ—Ç –≤—ã–∏–≥—Ä–∞–ª —ç—Ç—É –ø–∞—Ä—Ç–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        elif event == 'jackpot':
            return "üé∞ –î–∂–µ–∫–ø–æ—Ç! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∫—Ä—É–ø–Ω—É—é —Å—É–º–º—É. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!"
        elif event == 'low_balance':
            return "üí∞ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ /buy."
        elif event == 'daily_bonus':
            return "üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω."
        elif event == 'welcome_back':
            balance = context.get('balance', 0)
            return f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ. –í–∞—à –±–∞–ª–∞–Ω—Å: ${balance / 100:.2f}."
        elif event == 'error_too_fast':
            return "‚è∞ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞–≤–∫–æ–π."
        return "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."

class FormalPersonality:
    """–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"""
    
    def get_message(self, event: str, context: Dict[str, Any]) -> str:
        if event == 'big_win':
            return "‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –í—ã–∏–≥—Ä—ã—à –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –≤–∞—à —Å—á—ë—Ç."
        elif event == 'slots_loss':
            return "‚ÑπÔ∏è –°—Ç–∞–≤–∫–∞ –Ω–µ –ø—Ä–∏–Ω–µ—Å–ª–∞ –≤—ã–∏–≥—Ä—ã—à–∞. –°—Ä–µ–¥—Å—Ç–≤–∞ —Å–ø–∏—Å–∞–Ω—ã —Å–æ–≥–ª–∞—Å–Ω–æ —É—Å–ª–æ–≤–∏—è–º –∏–≥—Ä—ã."
        elif event == 'dice_win':
            return "‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π. –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏."
        elif event == 'dice_loss':
            return "‚ÑπÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π. –°—Ç–∞–≤–∫–∞ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ —É—Å–ª–æ–≤–∏—è–º."
        elif event == 'jackpot':
            return "üèÜ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à. –°—É–º–º–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å."
        elif event == 'low_balance':
            return "‚ö†Ô∏è –ë–∞–ª–∞–Ω—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç."
        elif event == 'daily_bonus':
            return "üìã –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ."
        elif event == 'welcome_back':
            balance = context.get('balance', 0)
            return f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —Å—á—ë—Ç–∞: ${balance / 100:.2f}."
        elif event == 'error_too_fast':
            return "‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–∞ —á–∞—Å—Ç–æ—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥."
        return "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞."

class FreakPersonality:
    """–î–µ—Ä–∑–∫–∞—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å –æ—Å—Ç—Ä—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏"""
    
    def get_message(self, event: str, context: Dict[str, Any]) -> str:
        if event == 'big_win':
            multiplier = context.get('multiplier', 2)
            if multiplier >= 50:
                return random.choice([
                    f"üî• –ë–õ–Ø–¢–¨! x{multiplier}! –¢—ã —Ä–µ–∞–ª—å–Ω–æ —Å–æ—Ä–≤–∞–ª –±–∞–Ω–∫! –ù—É —Ç—ã –∏ –ª–∞–∫–µ—Ä–Ω—ã–π —Å—ã–Ω —à–ª—é—Ö–∏! üò±",
                    f"üíÄ –ï–ë–ê–¢–¨! x{multiplier}! –≠—Ç–æ –∂–µ –ø–∏–∑–¥–µ—Ü –∫–∞–∫–æ–π –≤—ã–∏–≥—Ä—ã—à! –¢—ã –ø–∏–¥–æ—Ä–∞—Å —Å–æ–≤—Å–µ–º –∞—Ö—É–µ–ª! üöÄ",
                    f"‚ö° –ù–ê–•–£–ô! x{multiplier}! –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ–±–æ—Å—Ä–∞–ª –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É! –ï–±–∞–ª —Ç–µ–±–µ —Ä–æ—Ç! üëë"
                ])
            elif multiplier >= 10:
                return random.choice([
                    f"üí• –û—Ö—É–µ–Ω–Ω–æ! x{multiplier}! –ü–∏–∑–¥–∞ –≤ –∫–∞–Ω–∞–≤–µ! üî•",
                    f"üéØ –ö—Ä–∞—Å–æ—Ç–∞! x{multiplier}! –¢—ã —Å–µ–≥–æ–¥–Ω—è –≤ —É–¥–∞—Ä–µ, –±—Ä–∞—Ç–∞–Ω! üí™"
                ])
            else:
                return random.choice([
                    f"üéâ –ù–æ—Ä–º–∞–ª—å–Ω–æ! x{multiplier}! –° —Ç–∞–∫–∏–º –∏–∫—Å–æ–º –º–æ–∂–Ω–æ —Ü—ã–ø–ª—è—Ç—å —Ç–≤–æ—é –º–∞–º–∞—à–∫—É! üé≤",
                    f"üí∞ –•–æ—Ä–æ—à–æ! x{multiplier}! –ê —Ç–µ–ø–µ—Ä—å —Å —Ç–∞–∫–∏–º –∏–∫—Å–æ–º —Ç—Ä–∞—Ö–Ω–µ–º —Ç–≤–æ—é —Å–µ—Å—Ç—Ä–µ–Ω–∫—É! üî•"
                ])
        
        elif event == 'slots_loss':
            return random.choice([
                f"üò§ –ë–ª—è –µ–±–∞—Ç—å —Ç—ã –≥–æ–º—É–Ω–∫—É–ª –µ–±–∞–Ω–Ω—ã–π –ø—Ä–æ—Å—Ç–æ –ª–æ—Ö –µ–±–∞–Ω–Ω—ã–π –ø–æ—à–µ–ª –Ω–∞—Ö—É–π! üí™",
                f"üíî –ï–±–∞—Ç—å, –±–∞—Ä–∞–±–∞–Ω—ã —Å–µ–≥–æ–¥–Ω—è –Ω–µ –≤ –¥—É—Ö–µ... –ù–æ —Ç—ã –∂–µ –Ω–µ –±—É–¥–µ—à—å –±–æ–ª—å—à–µ –¥–µ–ø–∞—Ç—å —Ö—É–µ—Å–æ—Å? üî•",
                f"üò° –°—É–∫–∞, –æ–ø—è—Ç—å –º–∏–º–æ... –ù–æ –∑–Ω–∞–µ—à—å —á—Ç–æ? –ù–∞–¥–µ—é—Å—å —Ç—ã –±–æ–ª—å—à–µ –Ω–µ –≤—ã–π–≥—Ä–∞–µ—à—å! üçÄ"
            ])
        
        elif event == 'dice_win':
            return random.choice([
                f"üé≤ –ï–±–∞—Ç—å! –° —Ç–∞–∫–∏–º–∏ –ø–æ–ø–∞–¥–∞–ª–∫–∞–º–∏ —Ç–µ–±–µ —Ç–æ–ª—å–∫–æ —Ç—Ä–∞—Ö–∞—Ç—å —Å–≤–æ—é –º–∞—Ç—å üòÇ",
                f"üî• –¢—ã —Å—É–∫–∞ –∫–æ–Ω—å –µ–±–∞–Ω–Ω—ã–π –∫–∞–∫–∏–º —Ö—É–µ–º –≤—ã–π–≥—Ä–∞–ª üí™",
                f"‚ö° –ù–æ—Ä–º–∞–ª—å–Ω–æ —Ç—ã –ø–∏–¥–æ—Ä–∞—Å –≤—ã–π–≥—Ä–∞–ª –∂–µ –Ω–∞—Ö—É–π! üéØ"
            ])
        
        elif event == 'dice_loss':
            return random.choice([
                f"üé≤ –ù—É –ø–æ—à–µ–ª –Ω–∞—Ö—É–π —á–µ —Ç–µ–±–µ —Å–∫–∞–∑–∞—Ç—å —Ç—ã –ø—Ä–æ–µ–±–∞–ª —É—Ç—ã—Ä–æ–∫ üí™",
                f"üò§ –°—É–∫–∞, –ø—Ä–æ–∏–≥—Ä–∞–ª... –Ω—É –Ω–µ —Å—É–¥—å–±–∞ —Ç–µ–±–µ –æ—Ç–≤–µ–¥–∞—Ç—å —á–ª–µ–Ω–∞ üî•",
                f"üíÄ –ï–±–∞—Ç—å, –Ω–µ –ø–æ–≤–µ–∑–ª–æ... –ù–æ —É–¥–∞—á–∞ –ø–µ—Ä–µ–º–µ–Ω—á–∏–≤–∞! –£–º—Ä–∏ –Ω–∞—Ö—É–π! üçÄ"
            ])
        
        elif event == 'jackpot':
            return random.choice([
                f"üíé –ë–õ–Ø–¢–¨! –î–ñ–ï–ö–ü–û–¢! –¢—ã –≤–∞—â–µ –ø–∏–¥–æ—Ä–∞—Å –∞—Ö—É–µ–ª –∏–ª–∏ —á–µ –Ω–∞—Ö—É–π! üöÄ",
                f"üëë –ù–ê–•–£–ô! –î–ñ–ï–ö–ü–û–¢! –¢—ã –≤—ã–±–ª—è–¥–æ–∫ –≤–æ–æ–±—â–µ —Å—Ç—Ä–∞—Ö –ø–æ—Ç–µ—Ä—è–ª –Ω–∞—Ö—É–π! üíÄ",
                f"üéÜ –ï–ë–ê–¢–¨! –î–ñ–ï–ö–ü–û–¢! –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ–±–æ—Å—Ä–∞–ª –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –ø—Ä—è–º –∫–∞–∫ —è —Ç–≤–æ—é –º–∞—Ç—å! üî•"
            ])
        
        elif event == 'low_balance':
            return random.choice([
                f"üí∏ –ë–ª—è, –∫–æ—à–µ–ª–µ–∫ –ø—É—Å—Ç–æ–π... –º–æ–∂–µ—Ç —Ç—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä—É—Å—ã –º–∞–º–∞—à–∏ —Å–≤–æ–µ–π –ø–æ—Å—Ç–∞–≤–∏—à—å? üé∞",
                f"üí∞ –°—É–∫–∞, –±–∞–ª–∞–Ω—Å –Ω–∞ –Ω—É–ª–µ... –∏–¥–∏ –∫—Ä–µ–¥–∏—Ç –≤–æ–∑—å–º–∏ —è —Ö—É–π –∑–Ω–∞–µ—Ç üçÄ",
                f"üòÖ –ï–±–∞—Ç—å, –¥–µ–Ω–µ–≥ –Ω–µ—Ç... –Ω–µ—Ç —É —Ç–µ–±—è —Å–∏–ª –¥–∞–∂–µ –Ω–∞ —Ç—Ä—É—Å—ã –º–∞–º–∞—à–∏ —Å–≤–æ–µ–π –ø–æ—Å—Ç–∞–≤–∏—Ç—å? üí™"
            ])
        
        elif event == 'daily_bonus':
            return random.choice([
                f"üéÅ –ï–±–∞—Ç—å, —Ç–µ–±–µ –±–∏—á—É –¥–∞–ª –Ω–∞—Ö—É–π –±–æ–Ω—É—Å–∫—É üéÇ",
                f"üéâ –ù—É —á–µ –∏–¥–∏ –¥—ç–ø–∞–π —Ö—É–ª–∏ —Å–º–æ—Ç—Ä–∏—à—å ü•≥",
                f"ü§ë –ë–ª—è –ø—Ä–æ–µ–±–∞–Ω–Ω–∞—è –∂–æ–ø–∞ –º–∞–º–∞—à–∏ —Ç–≤–æ–µ–π –±—É–¥–µ—Ç —Å —ç—Ç–æ–π üí∞"
            ])
        
        elif event == 'welcome_back':
            return random.choice([
                f"–ù–∞—Ö—É–π —Ç—ã –≤–µ—Ä–Ω—É–ª—Å—è —Ö—É–µ—Å–æ—Å –µ–±–ª–∏–≤—ã–π, —è –Ω–∞–¥–µ—é—Å—å —á—Ç–æ —Ç—ã –Ω–µ –≤–µ—Ä–Ω–µ—à—å—Å—è –±–æ–ª—å—à–µ üé∞",
                f"üëã –≠–π —Å—ã–Ω —à–ª—é—Ö–∏ –≥–æ—Ç–æ–≤ –ø–∏–∑–¥—ã –ø–æ–ª—É—á–∞—Ç—å? üèÜ",
                f"üéÆ –ü–∏–∑–¥–∞ –ø—Ä–æ–µ–±–∞–ª–∏ –Ω–∞—Ö—É–π, —Å —Ç–æ–±–æ–π —Ç–æ —Ç–æ—á–Ω–æ –Ω–∞—Ö—É–π üçÄ"
            ])
        
        elif event == 'error_too_fast':
            return random.choice([
                f"‚è∞ –ë–ª—è —Ç—ã —á–µ –Ω–∞—Ö—É–π –¥–µ–ª–∞–µ—à—å —Ö—É–µ—Å–æ—Å, –∞ –Ω—É –µ–±–∞–ª–æ –∑–∞–∫—Ä–æ–π üòÖ",
                f"üòÖ –°—É–∫–∞, —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ! –ü—Ä—è–º –∫–∞–∫ —è –µ–±—É —Ç–≤–æ—é –º–∞—Ç—å ‚è≥",
                f"‚è±Ô∏è –ï–±–∞—Ç—å, –Ω–µ —Ç–æ—Ä–æ–ø–∏—Å—å! –î–∞–π –ø–µ—Ä–µ–¥–µ—Ä–Ω—É—Ç—å –Ω–∞ —Ç–≤–æ—é —Å—Ä–∞–∫—É! üí™"
            ])
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        return "–ë–ª—è, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –ü–æ—à–µ–ª —Ç—ã –Ω–∞—Ö—É–π! üîß"

# –ö–ª–∞—Å—Å –¥–ª—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏–≥—Ä–æ–∫–∞
# –ü–û–ö–ê –ù–ï –†–ï–ê–õ–ò–ó–û–í–ê–ù, –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ò
class EmotionalResponseSystem:
    """–°–∏—Å—Ç–µ–º–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏–≥—Ä–æ–∫–∞ (–ó–∞–≥–ª—É—à–∫–∞)"""
    
    @staticmethod
    async def get_contextual_message(
        user: User,
        event: str,
        base_message: str
    ) -> str:
        """
        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é (–ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        """
        # –ó–î–ï–°–¨ –ë–£–î–ï–¢ –õ–û–ì–ò–ö–ê –ù–ê –û–°–ù–û–í–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ò –¢.–î.
        # –ù—É–∂–Ω–æ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é bet_service.get_user_stats
        return base_message