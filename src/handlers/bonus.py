from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from sqlalchemy import select
from datetime import datetime, timedelta
import secrets
from src.models import User
from src.services.wallet_service import wallet_service
# –ù–û–í–û–ï:
from src.services.personality_engine import PersonalityEngine
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from src.utils.keyboards import get_main_menu_keyboard
from src.utils.ban_check import check_if_banned

router = Router()

@router.message(Command('bonus'))
async def cmd_bonus(message: Message):
    """–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if await check_if_banned(message):
        return
    
    from src.database import async_session_maker
    telegram_id = message.from_user.id

    async with async_session_maker() as session:
        result = await session.execute(
            select(User).where(User.telegram_id == telegram_id)
        )
        user = result.scalar_one_or_none()

        if not user:
            await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
            return

        now = datetime.utcnow()
        last_bonus = user.last_bonus_claimed_at

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞
        if last_bonus and (now - last_bonus).total_seconds() < 86400:
            next_bonus = last_bonus + timedelta(hours=24)
            remaining = next_bonus - now
            hours = int(remaining.total_seconds() // 3600)
            minutes = int((remaining.total_seconds() % 3600) // 60)
            # –ù–û–í–û–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, cooldown)
            # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer(
                f"‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å —É–∂–µ –ø–æ–ª—É—á–µ–Ω!\n"
                f"–°–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å —á–µ—Ä–µ–∑: <b>{hours}—á {minutes}–º</b>"
            )
            return

        # Streak bonus
        if last_bonus and (now - last_bonus).days == 1:
            user.bonus_streak += 1
        elif not last_bonus or (now - last_bonus).days > 1:
            user.bonus_streak = 1

        streak_multiplier = 1 + min(user.bonus_streak - 1, 6) * 0.1

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—É–º–º—ã
        base_amount = secrets.randbelow(9000) + 1000  # $10-$100
        bonus_amount = int(base_amount * streak_multiplier)

        # –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ
        await wallet_service.credit(user.id, bonus_amount, 'daily_bonus')
        user.last_bonus_claimed_at = now
        await session.commit()

        balance = await wallet_service.get_balance(user.id)

        streak_info = ""
        if user.bonus_streak > 1:
            streak_info = f"\nüî• –ü—Ä–æ–¥–æ–ª–∂–∞–π –∑–∞—Ö–æ–¥–∏—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!\n–¢–µ–∫—É—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: +{int((streak_multiplier - 1) * 100)}%"

        # –ù–û–í–û–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        text = await PersonalityEngine.get_message('daily_bonus', user)
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        text += f"\nüí∞ +${bonus_amount / 100:.2f}\n"
        text += f"üî• –°–µ—Ä–∏—è: {user.bonus_streak} {'–¥–µ–Ω—å' if user.bonus_streak == 1 else '–¥–Ω–µ–π'} –ø–æ–¥—Ä—è–¥"
        text += f"{streak_info}\n"
        text += f"üíµ –ë–∞–ª–∞–Ω—Å: <b>${balance / 100:.2f}</b>"

        await message.answer(text)

# –¢–ï–ö–°–¢–û–í–´–ô –¢–†–ò–ì–ì–ï–† –¥–ª—è –±–æ–Ω—É—Å–∞ - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –≥—Ä—É–ø–ø–∞—Ö
@router.message(lambda message: message.text == 'üéÅ –ë–æ–Ω—É—Å')
async def trigger_bonus(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä 'üéÅ –ë–æ–Ω—É—Å'"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —á–∞—Ç–∞: –µ—Å–ª–∏ –≥—Ä—É–ø–ø–∞ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º (–Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º)
    if message.chat.type in ['group', 'supergroup']:
        # –ù–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if await check_if_banned(message):
        return
    
    # –ï—Å–ª–∏ –õ–° - –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
    from src.database import async_session_maker
    telegram_id = message.from_user.id

    async with async_session_maker() as session:
        result = await session.execute(
            select(User).where(User.telegram_id == telegram_id)
        )
        user = result.scalar_one_or_none()

        if not user:
            await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
            return

        now = datetime.utcnow()
        last_bonus = user.last_bonus_claimed_at

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞
        if last_bonus and (now - last_bonus).total_seconds() < 86400:
            next_bonus = last_bonus + timedelta(hours=24)
            remaining = next_bonus - now
            hours = int(remaining.total_seconds() // 3600)
            minutes = int((remaining.total_seconds() % 3600) // 60)
            # –ù–û–í–û–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, cooldown)
            # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer(
                f"‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å —É–∂–µ –ø–æ–ª—É—á–µ–Ω!\n"
                f"–°–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å —á–µ—Ä–µ–∑: <b>{hours}—á {minutes}–º</b>"
            )
            return

        # Streak bonus
        if last_bonus and (now - last_bonus).days == 1:
            user.bonus_streak += 1
        elif not last_bonus or (now - last_bonus).days > 1:
            user.bonus_streak = 1

        streak_multiplier = 1 + min(user.bonus_streak - 1, 6) * 0.1

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—É–º–º—ã
        base_amount = secrets.randbelow(9000) + 1000  # $10-$100
        bonus_amount = int(base_amount * streak_multiplier)

        # –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ
        await wallet_service.credit(user.id, bonus_amount, 'daily_bonus')
        user.last_bonus_claimed_at = now
        await session.commit()

        balance = await wallet_service.get_balance(user.id)

        streak_info = ""
        if user.bonus_streak > 1:
            streak_info = f"\nüî• –ü—Ä–æ–¥–æ–ª–∂–∞–π –∑–∞—Ö–æ–¥–∏—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!\n–¢–µ–∫—É—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: +{int((streak_multiplier - 1) * 100)}%"

        # –ù–û–í–û–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        text = await PersonalityEngine.get_message('daily_bonus', user)
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        text += f"\nüí∞ +${bonus_amount / 100:.2f}\n"
        text += f"üî• –°–µ—Ä–∏—è: {user.bonus_streak} {'–¥–µ–Ω—å' if user.bonus_streak == 1 else '–¥–Ω–µ–π'} –ø–æ–¥—Ä—è–¥"
        text += f"{streak_info}\n"
        text += f"üíµ –ë–∞–ª–∞–Ω—Å: <b>${balance / 100:.2f}</b>"

        await message.answer(text)
