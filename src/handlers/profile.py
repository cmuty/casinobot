from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy import select
from src.models import User
from src.services.wallet_service import wallet_service
from src.services.bet_service import bet_service
# –ù–û–í–û–ï:
from src.services.personality_engine import PersonalityEngine
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from src.utils.keyboards import get_main_menu_keyboard
from src.utils.ban_check import check_if_banned
from src.config import settings

def create_profile_keyboard(user, is_admin: bool = False) -> InlineKeyboardBuilder:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è"""
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if is_admin:
        builder.button(text="üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin:panel")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if user.is_vip:
        builder.button(text="üèÜ –õ–∏–¥–µ—Ä–±–æ—Ä–¥—ã", callback_data="leaderboard:menu")
        builder.button(text="üí≥ –ö—Ä–µ–¥–∏—Ç—ã", callback_data="credits:menu")
        builder.button(text="‚≠ê VIP –±–æ–Ω—É—Å—ã", callback_data="vip:bonuses")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if not user.is_vip:
        builder.button(text="üèÜ –õ–∏–¥–µ—Ä–±–æ—Ä–¥—ã", callback_data="leaderboard:menu")
    
    return builder


router = Router()

@router.message(Command('profile'))
async def cmd_profile(message: Message):
    """–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if await check_if_banned(message):
        return
    
    from src.database import async_session_maker
    telegram_id = message.from_user.id

    async with async_session_maker() as session:
        result = await session.execute(
            select(User).where(User.telegram_id == telegram_id)
        )
        user = result.scalar_one_or_none()

        if not user:
            await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
            return

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        balance = await wallet_service.get_balance(user.id)
        stats = await bet_service.get_user_stats(user.id)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å
        total_wagered = stats['total_wagered_cents']
        if total_wagered >= 10000000:
            level = "üëë –ö—Ä—É–ø—å–µ"
        elif total_wagered >= 2000000:
            level = "üíé –•–∞–π—Ä–æ–ª–ª–µ—Ä"
        elif total_wagered >= 500000:
            level = "ü•á –î—ç–ø–Ω—É–ª —Å–∞—Ä–∞–π"
        elif total_wagered >= 100000:
            level = "ü•à –í–∑—è–ª –∏–ø–æ—Ç–µ–∫—É"
        else:
            level = "ü•â –ë–æ–º–∂"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        if telegram_id == settings.ADMIN_ID:
            status = "üîê –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
        elif user.is_vip:
            status = "‚≠ê VIP"
        else:
            status = "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

        text = (
            f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞</b>\n\n"
            f"üÜî {user.first_name or '–ò–≥—Ä–æ–∫'}\n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å: <b>${balance / 100:.2f}</b>\n\n"
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
            f"‚îú –í—Å–µ–≥–æ —Å—Ç–∞–≤–æ–∫: {stats['total_bets']}\n"
            f"‚îú –í—Å–µ–≥–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: ${stats['total_wagered_cents'] / 100:.2f}\n"
            f"‚îú –í—Å–µ–≥–æ –≤—ã–∏–≥—Ä–∞–Ω–æ: ${stats['total_won_cents'] / 100:.2f}\n"
            f"‚îú –í–∏–Ω—Ä–µ–π—Ç: {stats['winrate']:.1f}%\n"
            f"‚îî –£—Ä–æ–≤–µ–Ω—å: {level}\n\n"
            f"üéñÔ∏è <b>–°—Ç–∞—Ç—É—Å:</b> {status}"
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        builder = create_profile_keyboard(user, message.from_user.id == settings.ADMIN_ID)
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        if builder.buttons:
            builder.adjust(2)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
            await message.answer(text, reply_markup=builder.as_markup())
        else:
            await message.answer(text)
        # --- –û–¢–ü–†–ê–í–ö–ê –ú–ï–ù–Æ ---
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —á–∞—Ç–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –º–µ–Ω—é
        # if message.chat.type in ['group', 'supergroup']:
        #     # –í –≥—Ä—É–ø–ø–µ –º–µ–Ω—é –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        #     pass
        # else:
        #     # –í –õ–° –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        #     await message.answer("–ú–µ–Ω—é:", reply_markup=get_main_menu_keyboard())
        # –£–ë–†–ê–ù–û: –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ /profile

# –¢–ï–ö–°–¢–û–í–´–ô –¢–†–ò–ì–ì–ï–† –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –≥—Ä—É–ø–ø–∞—Ö
@router.message(lambda message: message.text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å')
async def trigger_profile(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä 'üë§ –ü—Ä–æ—Ñ–∏–ª—å'"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —á–∞—Ç–∞: –µ—Å–ª–∏ –≥—Ä—É–ø–ø–∞ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º (–Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º)
    if message.chat.type in ['group', 'supergroup']:
        # –ù–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if await check_if_banned(message):
        return
    
    # –ï—Å–ª–∏ –õ–° - –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
    from src.database import async_session_maker
    telegram_id = message.from_user.id

    async with async_session_maker() as session:
        result = await session.execute(
            select(User).where(User.telegram_id == telegram_id)
        )
        user = result.scalar_one_or_none()

        if not user:
            await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
            return

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        balance = await wallet_service.get_balance(user.id)
        stats = await bet_service.get_user_stats(user.id)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å
        total_wagered = stats['total_wagered_cents']
        if total_wagered >= 10000000:
            level = "üëë –ö—Ä—É–ø—å–µ"
        elif total_wagered >= 2000000:
            level = "üíé –•–∞–π—Ä–æ–ª–ª–µ—Ä"
        elif total_wagered >= 500000:
            level = "ü•á –î—ç–ø–Ω—É–ª —Å–∞—Ä–∞–π"
        elif total_wagered >= 100000:
            level = "ü•à –í–∑—è–ª –∏–ø–æ—Ç–µ–∫—É"
        else:
            level = "ü•â –ë–æ–º–∂"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        if telegram_id == settings.ADMIN_ID:
            status = "üîê –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
        elif user.is_vip:
            status = "‚≠ê VIP"
        else:
            status = "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

        text = (
            f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞</b>\n\n"
            f"üÜî {user.first_name or '–ò–≥—Ä–æ–∫'}\n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å: <b>${balance / 100:.2f}</b>\n\n"
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
            f"‚îú –í—Å–µ–≥–æ —Å—Ç–∞–≤–æ–∫: {stats['total_bets']}\n"
            f"‚îú –í—Å–µ–≥–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: ${stats['total_wagered_cents'] / 100:.2f}\n"
            f"‚îú –í—Å–µ–≥–æ –≤—ã–∏–≥—Ä–∞–Ω–æ: ${stats['total_won_cents'] / 100:.2f}\n"
            f"‚îú –í–∏–Ω—Ä–µ–π—Ç: {stats['winrate']:.1f}%\n"
            f"‚îî –£—Ä–æ–≤–µ–Ω—å: {level}\n\n"
            f"üéñÔ∏è <b>–°—Ç–∞—Ç—É—Å:</b> {status}"
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        builder = create_profile_keyboard(user, message.from_user.id == settings.ADMIN_ID)
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        if builder.buttons:
            builder.adjust(2)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
            await message.answer(text, reply_markup=builder.as_markup())
        else:
            await message.answer(text)

# –°–û–ö–†–ê–©–ï–ù–ù–´–ï –ö–û–ú–ê–ù–î–´ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è - —Ç–æ–ª—å–∫–æ –≤ –õ–°
@router.message(lambda message: message.text and message.text.lower() in ['–ø—Ä–æ—Ñ–∏–ª—å'])
async def shortcut_profile(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É '–ø—Ä–æ—Ñ–∏–ª—å'"""
    # –¢–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if message.chat.type in ['group', 'supergroup']:
        return
    await cmd_profile(message)

# –†–£–°–°–ö–ê–Ø –ö–û–ú–ê–ù–î–ê /–ø—Ä–æ—Ñ–∏–ª—å
@router.message(Command('–ø—Ä–æ—Ñ–∏–ª—å'))
async def cmd_profile_ru(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä—É—Å—Å–∫—É—é –∫–æ–º–∞–Ω–¥—É /–ø—Ä–æ—Ñ–∏–ª—å"""
    await cmd_profile(message)

# –ê–õ–ò–ê–° –î–õ–Ø –ü–†–û–§–ò–õ–Ø –ë–ï–ó –°–õ–≠–®–ê
@router.message(lambda message: message.text and message.text.lower() == '–ø—Ä–æ—Ñ–∏–ª—å')
async def profile_alias(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–ª–∏–∞—Å '–ø—Ä–æ—Ñ–∏–ª—å' –±–µ–∑ —Å–ª—ç—à–∞"""
    await cmd_profile(message)

@router.message(Command('balance'))
async def cmd_balance(message: Message):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –±–∞–ª–∞–Ω—Å–∞"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if await check_if_banned(message):
        return
    
    from src.database import async_session_maker
    telegram_id = message.from_user.id

    async with async_session_maker() as session:
        result = await session.execute(
            select(User).where(User.telegram_id == telegram_id)
        )
        user = result.scalar_one_or_none()

        if not user:
            await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
            return

        balance = await wallet_service.get_balance(user.id)
        # –ù–û–í–û–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        # –≠—Ç–æ –Ω–µ —Å–æ–≤—Å–µ–º —Å–æ–±—ã—Ç–∏–µ, –Ω–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –±–∞–ª–∞–Ω—Å–∞
        text = f"üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: <b>${balance / 100:.2f}</b>"
        # –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ:
        # context = {'balance': balance}
        # text = await PersonalityEngine.get_message('balance_check', user, context)
        # if 'balance_check' not in [...]:
        #     text = f"üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: <b>${balance / 100:.2f}</b>"

        await message.answer(text)

# –¢–ï–ö–°–¢–û–í–´–ô –¢–†–ò–ì–ì–ï–† –¥–ª—è –±–∞–ª–∞–Ω—Å–∞ - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –≥—Ä—É–ø–ø–∞—Ö
@router.message(lambda message: message.text == 'üí∞ –ë–∞–ª–∞–Ω—Å')
async def trigger_balance(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä 'üí∞ –ë–∞–ª–∞–Ω—Å'"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —á–∞—Ç–∞: –µ—Å–ª–∏ –≥—Ä—É–ø–ø–∞ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º (–Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º)
    if message.chat.type in ['group', 'supergroup']:
        # –ù–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if await check_if_banned(message):
        return
    
    # –ï—Å–ª–∏ –õ–° - –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
    from src.database import async_session_maker
    telegram_id = message.from_user.id

    async with async_session_maker() as session:
        result = await session.execute(
            select(User).where(User.telegram_id == telegram_id)
        )
        user = result.scalar_one_or_none()

        if not user:
            await message.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
            return

        balance = await wallet_service.get_balance(user.id)
        # –ù–û–í–û–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        # –≠—Ç–æ –Ω–µ —Å–æ–≤—Å–µ–º —Å–æ–±—ã—Ç–∏–µ, –Ω–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –±–∞–ª–∞–Ω—Å–∞
        text = f"üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: <b>${balance / 100:.2f}</b>"
        # –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ:
        # context = {'balance': balance}
        # text = await PersonalityEngine.get_message('balance_check', user, context)
        # if 'balance_check' not in [...]:
        #     text = f"üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: <b>${balance / 100:.2f}</b>"

        await message.answer(text)

# –°–û–ö–†–ê–©–ï–ù–ù–´–ï –ö–û–ú–ê–ù–î–´ –¥–ª—è –±–∞–ª–∞–Ω—Å–∞ - —Ç–æ–ª—å–∫–æ –≤ –õ–°
@router.message(lambda message: message.text and message.text.lower() in ['–±', '–±–∞–ª–∞–Ω—Å'])
async def shortcut_balance(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã '–±' –∏ '–±–∞–ª–∞–Ω—Å'"""
    # –¢–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if message.chat.type in ['group', 'supergroup']:
        return
    await cmd_balance(message)

# –†–£–°–°–ö–ê–Ø –ö–û–ú–ê–ù–î–ê /–±–∞–ª–∞–Ω—Å
@router.message(Command('–±–∞–ª–∞–Ω—Å'))
async def cmd_balance_ru(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä—É—Å—Å–∫—É—é –∫–æ–º–∞–Ω–¥—É /–±–∞–ª–∞–Ω—Å"""
    await cmd_balance(message)
