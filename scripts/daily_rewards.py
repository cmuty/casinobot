#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–≥—Ä–∞–¥ –∑–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥
"""

import asyncio
import logging
from src.database import init_db, close_db
from src.services.rating_service import RatingService, CreditService

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def daily_rewards_calculation():
    """–í—ã—á–∏—Å–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥"""
    try:
        await init_db()
        logger.info("üèÜ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—á–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥...")
        
        # –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ –¥–Ω–µ–≤–Ω–æ–π –ª–∏–¥–µ—Ä–±–æ—Ä–¥
        await RatingService.calculate_daily_rewards()
        logger.info("‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã
        await CreditService.check_overdue_credits()
        logger.info("‚úÖ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
        
        logger.info("üéâ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–≥—Ä–∞–¥: {e}")
    finally:
        await close_db()


if __name__ == '__main__':
    asyncio.run(daily_rewards_calculation())
