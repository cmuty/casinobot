#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Redis –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
"""

import asyncio
import logging
from src.redis_db import init_redis, close_redis, db
from src.models_redis import User, Wallet

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def test_redis_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis"""
    try:
        await init_redis()
        logger.info("‚úÖ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = User(
            telegram_id=123456789,
            username="test_user",
            first_name="Test",
            language_code="en"
        )
        
        await db.set_user(test_user.telegram_id, test_user.to_dict())
        logger.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –≤ Redis")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        retrieved_user = await db.get_user(test_user.telegram_id)
        if retrieved_user:
            logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω: {retrieved_user['username']}")
        else:
            logger.error("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
        test_wallet = Wallet(
            user_id=test_user.telegram_id,
            balance_cents=10000
        )
        
        await db.set_wallet(test_wallet.user_id, test_wallet.to_dict())
        logger.info("‚úÖ –ö–æ—à–µ–ª–µ–∫ —Å–æ–∑–¥–∞–Ω –≤ Redis")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º
        new_balance = await db.increment_balance(test_user.telegram_id, 5000)
        logger.info(f"‚úÖ –ë–∞–ª–∞–Ω—Å —É–≤–µ–ª–∏—á–µ–Ω –¥–æ: {new_balance}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
        balance = await db.get_balance(test_user.telegram_id)
        logger.info(f"‚úÖ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance}")
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        await db.delete_user(test_user.telegram_id)
        logger.info("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        
        logger.info("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã Redis –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Redis: {e}")
    finally:
        await close_redis()


if __name__ == "__main__":
    asyncio.run(test_redis_connection())
