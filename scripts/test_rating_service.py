#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.database import init_db, close_db
from src.services.rating_service import RatingService

async def test_rating_service():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤"""
    try:
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        await init_db()
        
        print("üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RatingService...")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        print("üìà –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞...")
        leaderboard = await RatingService.get_leaderboard('daily', 10)
        print(f"‚úÖ –õ–∏–¥–µ—Ä–±–æ—Ä–¥ –ø–æ–ª—É—á–µ–Ω: {len(leaderboard)} –∑–∞–ø–∏—Å–µ–π")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        print("üìà –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞...")
        leaderboard = await RatingService.get_leaderboard('weekly', 10)
        print(f"‚úÖ –õ–∏–¥–µ—Ä–±–æ—Ä–¥ –ø–æ–ª—É—á–µ–Ω: {len(leaderboard)} –∑–∞–ø–∏—Å–µ–π")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Å—è—á–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
        print("üìà –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—è—á–Ω–æ–≥–æ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞...")
        leaderboard = await RatingService.get_leaderboard('monthly', 10)
        print(f"‚úÖ –õ–∏–¥–µ—Ä–±–æ—Ä–¥ –ø–æ–ª—É—á–µ–Ω: {len(leaderboard)} –∑–∞–ø–∏—Å–µ–π")
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        await close_db()

if __name__ == "__main__":
    asyncio.run(test_rating_service())
